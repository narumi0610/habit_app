name: Flutter CI

# ワークフローをトリガーするイベントを定義
on:
  push:
    branches:
      - main  # mainブランチへのpush時に実行
  pull_request:
    branches:
      - main  # mainブランチへのPR作成時に実行

# ワークフロー内のジョブを定義
jobs:
  build:
    # ジョブが実行される仮想環境を指定
    runs-on: ubuntu-latest

    steps:
    # リポジトリのコードをチェックアウト
    - name: Checkout code
      uses: actions/checkout@v2

    # Flutterのセットアップ
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.3'  # 使用するFlutterのバージョン

    # Flutterの依存関係をインストール
    - name: Install dependencies
      run: flutter pub get

    # リモートリポジトリでGitHub Secretsから.envファイルを動的に作成
    - name: Create .env
      run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env

    # リントチェックを実行
    - name: Run linter
      run: flutter analyze

    # テストを実行
    - name: Run tests
      run: flutter test

    # Androidのkeystoreファイル（key.jks）をSecretsからデコードして配置
    - name: Decode keystore
      run: echo "${{ secrets.SIGNING_KEY }}" | base64 -d > android/app/key.jks

    # Androidのビルド（Secretsから署名情報を取得）
    - name: Build APK (Android)
      run: flutter build apk --release
      env:
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        ALIAS: ${{ secrets.ALIAS }}
        KEY_PATH: android/app/key.jks

    # ビルドしたapkをgithub Actionsアップロード
    - name: "Deploy apk 🚀"
      uses: actions/upload-artifact@v2
      with:
        name: release-apk  # アーティファクトの名前
        path: build/app/outputs/flutter-apk/app-release.apk

    # iOSのビルド
    - name: Build iOS
      run: flutter build ios --release
